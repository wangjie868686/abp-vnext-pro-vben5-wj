// This file is auto-generated by @hey-api/openapi-ts

export type AbpLoginResult = {
    result?: LoginResultType;
    readonly description?: (string) | null;
};

export type ActionApiDescriptionModel = {
    uniqueName?: (string) | null;
    name?: (string) | null;
    httpMethod?: (string) | null;
    url?: (string) | null;
    supportedVersions?: Array<(string)> | null;
    parametersOnMethod?: Array<MethodParameterApiDescriptionModel> | null;
    parameters?: Array<ParameterApiDescriptionModel> | null;
    returnValue?: ReturnValueApiDescriptionModel;
    allowAnonymous?: (boolean) | null;
    implementFrom?: (string) | null;
};

export type AddOrUpdateConnectionStringInput = {
    /**
     * id
     */
    id?: string;
    /**
     * 连接字符串名称
     */
    name?: (string) | null;
    /**
     * 连接字符串地址
     */
    value?: (string) | null;
};

export type AddRoleToOrganizationUnitInput = {
    roleId?: Array<(string)> | null;
    organizationUnitId?: string;
};

export type AddUserToOrganizationUnitInput = {
    userId?: Array<(string)> | null;
    organizationUnitId?: string;
};

export type AggregateRouteConfig = {
    routeKey?: (string) | null;
    parameter?: (string) | null;
    jsonPath?: (string) | null;
};

export type ApplicationApiDescriptionModel = {
    modules?: {
        [key: string]: ModuleApiDescriptionModel;
    } | null;
    types?: {
        [key: string]: TypeApiDescriptionModel;
    } | null;
};

export type ApplicationAuthConfigurationDto = {
    grantedPolicies?: {
        [key: string]: (boolean);
    } | null;
};

export type ApplicationConfigurationDto = {
    localization?: ApplicationLocalizationConfigurationDto;
    auth?: ApplicationAuthConfigurationDto;
    setting?: ApplicationSettingConfigurationDto;
    currentUser?: CurrentUserDto;
    features?: ApplicationFeatureConfigurationDto;
    globalFeatures?: ApplicationGlobalFeatureConfigurationDto;
    multiTenancy?: MultiTenancyInfoDto;
    currentTenant?: CurrentTenantDto;
    timing?: TimingDto;
    clock?: ClockDto;
    objectExtensions?: ObjectExtensionsDto;
    extraProperties?: {
        [key: string]: unknown;
    } | null;
};

export type ApplicationFeatureConfigurationDto = {
    values?: {
        [key: string]: ((string) | null);
    } | null;
};

export type ApplicationGlobalFeatureConfigurationDto = {
    enabledFeatures?: Array<(string)> | null;
};

export type ApplicationLocalizationConfigurationDto = {
    values?: {
        [key: string]: {
            [key: string]: (string);
        };
    } | null;
    resources?: {
        [key: string]: ApplicationLocalizationResourceDto;
    } | null;
    languages?: Array<LanguageInfo> | null;
    currentCulture?: CurrentCultureDto;
    defaultResourceName?: (string) | null;
    languagesMap?: {
        [key: string]: Array<NameValue>;
    } | null;
    languageFilesMap?: {
        [key: string]: Array<NameValue>;
    } | null;
};

export type ApplicationLocalizationDto = {
    resources?: {
        [key: string]: ApplicationLocalizationResourceDto;
    } | null;
    currentCulture?: CurrentCultureDto;
};

export type ApplicationLocalizationResourceDto = {
    texts?: {
        [key: string]: (string);
    } | null;
    baseResources?: Array<(string)> | null;
};

export type ApplicationSettingConfigurationDto = {
    values?: {
        [key: string]: ((string) | null);
    } | null;
};

export type ChangePasswordInput = {
    currentPassword?: (string) | null;
    newPassword: string;
};

export type ClockDto = {
    kind?: (string) | null;
};

export type ControllerApiDescriptionModel = {
    controllerName?: (string) | null;
    controllerGroupName?: (string) | null;
    isRemoteService?: boolean;
    isIntegrationService?: boolean;
    apiVersion?: (string) | null;
    type?: (string) | null;
    interfaces?: Array<ControllerInterfaceApiDescriptionModel> | null;
    actions?: {
        [key: string]: ActionApiDescriptionModel;
    } | null;
};

export type ControllerInterfaceApiDescriptionModel = {
    type?: (string) | null;
    name?: (string) | null;
    methods?: Array<InterfaceMethodApiDescriptionModel> | null;
};

/**
 * 控制策略
 */
export type ControlType = 10 | 20 | 30 | 40;

export type CopyTemplateInput = {
    id?: string;
    /**
     * 名称
     */
    name?: (string) | null;
    /**
     * 备注
     */
    remark?: (string) | null;
};

export type CreateAggregateInput = {
    projectId?: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 描述
     */
    description: string;
};

export type CreateDataDictinaryDetailInput = {
    id?: string;
    code?: (string) | null;
    displayText?: (string) | null;
    description?: (string) | null;
    order?: number;
};

export type CreateDataDictinaryInput = {
    code?: (string) | null;
    displayText?: (string) | null;
    description?: (string) | null;
};

export type CreateEntityModelInput = {
    id?: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 描述
     */
    description: string;
    relationalType?: RelationalType;
};

export type CreateEntityModelPropertyInput = {
    /**
     * 实体模型Id
     */
    id?: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 描述
     */
    description: string;
    /**
     * 必填
     */
    isRequired?: boolean;
    /**
     * 字符串最大长度
     */
    maxLength?: (number) | null;
    /**
     * 字符串最小长度
     */
    minLength?: (number) | null;
    /**
     * 当类型为decimal时的小数位数 (18,4) 中的18
     */
    decimalPrecision?: (number) | null;
    /**
     * 当类型为decimal时的字段长度 (18,4) 中的4
     */
    decimalScale?: (number) | null;
    /**
     * 枚举类型Id
     */
    enumTypeId?: (string) | null;
    /**
     * 数据类型Id
     */
    dataTypeId?: (string) | null;
    /**
     * 允许作为查询条件
     */
    allowSearch?: boolean;
    /**
     * 允许添加
     */
    allowAdd?: boolean;
    /**
     * 允许编辑
     */
    allowEdit?: boolean;
};

export type CreateEnumTypeInput = {
    /**
     * 编码
     */
    code: string;
    /**
     * 描述
     */
    description: string;
    /**
     * 实体模型Id
     */
    entityModelId?: string;
    projectId?: string;
};

export type CreateEnumTypePropertyInput = {
    /**
     * Id
     */
    enumTypeId?: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 枚举值
     */
    value?: number;
    /**
     * 描述
     */
    description: string;
};

/**
 * 创建语言
 */
export type CreateLanguageInput = {
    /**
     * 语言名称
     */
    cultureName?: (string) | null;
    /**
     * Ui语言名称
     */
    uiCultureName?: (string) | null;
    /**
     * 显示名称
     */
    displayName?: (string) | null;
    /**
     * 图标
     */
    flagIcon?: (string) | null;
    /**
     * 是否启用
     */
    isEnabled?: boolean;
};

/**
 * 创建语言文本
 */
export type CreateLanguageTextInput = {
    /**
     * 资源名称
     */
    resourceName?: (string) | null;
    /**
     * 语言名称
     */
    cultureName?: (string) | null;
    /**
     * 名称
     */
    name?: (string) | null;
    /**
     * 值
     */
    value?: (string) | null;
};

export type CreateOrganizationUnitInput = {
    displayName?: (string) | null;
    parentId?: (string) | null;
};

export type CreateProjectInput = {
    /**
     * 负责人
     */
    owner?: (string) | null;
    /**
     * 公司名称
     */
    companyName?: (string) | null;
    /**
     * 项目名称
     */
    projectName?: (string) | null;
    /**
     * 备注
     */
    remark?: (string) | null;
    /**
     * 是否支持多租户
     */
    supportTenant?: boolean;
};

export type CreateTemplateDetailInput = {
    /**
     * 模板id
     */
    templateId?: string;
    parentId?: (string) | null;
    templateType?: TemplateType;
    controlType?: ControlType;
    /**
     * 模板类型
     */
    name?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 模板内容
     */
    content?: (string) | null;
};

export type CreateTemplateInput = {
    /**
     * 名称
     */
    name?: (string) | null;
    /**
     * 备注
     */
    remark?: (string) | null;
};

/**
 * 创建模板
 */
export type CreateTextTemplateInput = {
    /**
     * 名称
     */
    name: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 内容
     */
    content: string;
    /**
     * 语言
     */
    cultureName: string;
};

export type CurrentCultureDto = {
    displayName?: (string) | null;
    englishName?: (string) | null;
    threeLetterIsoLanguageName?: (string) | null;
    twoLetterIsoLanguageName?: (string) | null;
    isRightToLeft?: boolean;
    cultureName?: (string) | null;
    name?: (string) | null;
    nativeName?: (string) | null;
    dateTimeFormat?: DateTimeFormatDto;
};

export type CurrentTenantDto = {
    id?: (string) | null;
    name?: (string) | null;
    isAvailable?: boolean;
};

export type CurrentUserDto = {
    isAuthenticated?: boolean;
    id?: (string) | null;
    tenantId?: (string) | null;
    impersonatorUserId?: (string) | null;
    impersonatorTenantId?: (string) | null;
    impersonatorUserName?: (string) | null;
    impersonatorTenantName?: (string) | null;
    userName?: (string) | null;
    name?: (string) | null;
    surName?: (string) | null;
    email?: (string) | null;
    emailVerified?: boolean;
    phoneNumber?: (string) | null;
    phoneNumberVerified?: boolean;
    roles?: Array<(string)> | null;
    sessionId?: (string) | null;
};

export type DataTypeDto = {
    id?: string;
    /**
     * 编码
     */
    code?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 是否是枚举
     */
    isEnum?: boolean;
};

export type DateTimeFormatDto = {
    calendarAlgorithmType?: (string) | null;
    dateTimeFormatLong?: (string) | null;
    shortDatePattern?: (string) | null;
    fullDateTimePattern?: (string) | null;
    dateSeparator?: (string) | null;
    shortTimePattern?: (string) | null;
    longTimePattern?: (string) | null;
};

export type DeleteAggregateInput = {
    id?: string;
};

export type DeleteConnectionStringInput = {
    /**
     * 连接字符串名称
     */
    name?: (string) | null;
    /**
     * 租户id
     */
    tenantId?: string;
};

export type DeleteDataDictionaryDetailInput = {
    dataDictionaryId?: string;
    dataDictionayDetailId?: string;
};

export type DeleteEntityModelInput = {
    aggregateId?: string;
    id?: string;
};

export type DeleteEntityModelPropertyInput = {
    id?: string;
    propertyId?: string;
};

export type DeleteEnumTypeInput = {
    /**
     * Id
     */
    id?: string;
    entityModelId?: string;
};

export type DeleteEnumTypePropertyInput = {
    /**
     * Id
     */
    enumTypeId?: string;
    /**
     * Id
     */
    id?: string;
};

export type DeleteFeatureInput = {
    providerName?: (string) | null;
    providerKey?: (string) | null;
};

/**
 * 删除语言
 */
export type DeleteLanguageInput = {
    /**
     * 语言Id
     */
    id?: string;
};

export type DeleteProjectInput = {
    id?: string;
};

export type DeleteTemplateDetailInput = {
    templateId?: string;
    templateDetailId?: string;
};

export type DeleteTemplateInput = {
    id?: string;
};

/**
 * 删除模板
 */
export type DeleteTextTemplateInput = {
    /**
     * 模板Id
     */
    id?: string;
};

export type DisabledTwoFactorInput = {
    /**
     * 验证码
     */
    code: string;
};

export type DownCodeInput = {
    templateId?: string;
    projectId?: string;
};

export type EnabledTwoFactorInput = {
    /**
     * 验证码
     */
    code: string;
    /**
     * 密钥
     */
    secret: string;
};

export type EntityChangeType = 0 | 1 | 2;

export type EntityExtensionDto = {
    properties?: {
        [key: string]: ExtensionPropertyDto;
    } | null;
    configuration?: {
        [key: string]: unknown;
    } | null;
};

export type ExtensionEnumDto = {
    fields?: Array<ExtensionEnumFieldDto> | null;
    localizationResource?: (string) | null;
};

export type ExtensionEnumFieldDto = {
    name?: (string) | null;
    value?: unknown;
};

export type ExtensionPropertyApiCreateDto = {
    isAvailable?: boolean;
};

export type ExtensionPropertyApiDto = {
    onGet?: ExtensionPropertyApiGetDto;
    onCreate?: ExtensionPropertyApiCreateDto;
    onUpdate?: ExtensionPropertyApiUpdateDto;
};

export type ExtensionPropertyApiGetDto = {
    isAvailable?: boolean;
};

export type ExtensionPropertyApiUpdateDto = {
    isAvailable?: boolean;
};

export type ExtensionPropertyAttributeDto = {
    typeSimple?: (string) | null;
    config?: {
        [key: string]: unknown;
    } | null;
};

export type ExtensionPropertyDto = {
    type?: (string) | null;
    typeSimple?: (string) | null;
    displayName?: LocalizableStringDto;
    api?: ExtensionPropertyApiDto;
    ui?: ExtensionPropertyUiDto;
    attributes?: Array<ExtensionPropertyAttributeDto> | null;
    configuration?: {
        [key: string]: unknown;
    } | null;
    defaultValue?: unknown;
};

export type ExtensionPropertyUiDto = {
    onTable?: ExtensionPropertyUiTableDto;
    onCreateForm?: ExtensionPropertyUiFormDto;
    onEditForm?: ExtensionPropertyUiFormDto;
    lookup?: ExtensionPropertyUiLookupDto;
};

export type ExtensionPropertyUiFormDto = {
    isVisible?: boolean;
};

export type ExtensionPropertyUiLookupDto = {
    url?: (string) | null;
    resultListPropertyName?: (string) | null;
    displayPropertyName?: (string) | null;
    valuePropertyName?: (string) | null;
    filterParamName?: (string) | null;
};

export type ExtensionPropertyUiTableDto = {
    isVisible?: boolean;
};

export type FeatureDto = {
    name?: (string) | null;
    displayName?: (string) | null;
    value?: (string) | null;
    provider?: FeatureProviderDto;
    description?: (string) | null;
    valueType?: IStringValueType;
    depth?: number;
    parentName?: (string) | null;
};

export type FeatureGroupDto = {
    name?: (string) | null;
    displayName?: (string) | null;
    features?: Array<FeatureDto> | null;
};

export type FeatureProviderDto = {
    name?: (string) | null;
    key?: (string) | null;
};

export type FileAggregateRoute = {
    routeKeys?: Array<(string)> | null;
    routeKeysConfig?: Array<AggregateRouteConfig> | null;
    upstreamPathTemplate?: (string) | null;
    upstreamHost?: (string) | null;
    routeIsCaseSensitive?: boolean;
    aggregator?: (string) | null;
    readonly upstreamHttpMethod?: Array<(string)> | null;
    priority?: number;
};

export type FileAuthenticationOptions = {
    authenticationProviderKey?: (string) | null;
    allowedScopes?: Array<(string)> | null;
};

export type FileCacheOptions = {
    ttlSeconds?: number;
    region?: (string) | null;
};

export type FileConfiguration = {
    routes?: Array<FileRoute> | null;
    dynamicRoutes?: Array<FileDynamicRoute> | null;
    aggregates?: Array<FileAggregateRoute> | null;
    globalConfiguration?: FileGlobalConfiguration;
};

export type FileDynamicRoute = {
    serviceName?: (string) | null;
    rateLimitRule?: FileRateLimitRule;
    downstreamHttpVersion?: (string) | null;
};

export type FileGlobalConfiguration = {
    requestIdKey?: (string) | null;
    serviceDiscoveryProvider?: FileServiceDiscoveryProvider;
    rateLimitOptions?: FileRateLimitOptions;
    qoSOptions?: FileQoSOptions;
    baseUrl?: (string) | null;
    loadBalancerOptions?: FileLoadBalancerOptions;
    downstreamScheme?: (string) | null;
    httpHandlerOptions?: FileHttpHandlerOptions;
    downstreamHttpVersion?: (string) | null;
};

export type FileHostAndPort = {
    host?: (string) | null;
    port?: number;
};

export type FileHttpHandlerOptions = {
    allowAutoRedirect?: boolean;
    useCookieContainer?: boolean;
    useTracing?: boolean;
    useProxy?: boolean;
    maxConnectionsPerServer?: number;
};

export type FileLoadBalancerOptions = {
    type?: (string) | null;
    key?: (string) | null;
    expiry?: number;
};

export type FileQoSOptions = {
    exceptionsAllowedBeforeBreaking?: number;
    durationOfBreak?: number;
    timeoutValue?: number;
};

export type FileRateLimitOptions = {
    clientIdHeader?: (string) | null;
    quotaExceededMessage?: (string) | null;
    rateLimitCounterPrefix?: (string) | null;
    disableRateLimitHeaders?: boolean;
    httpStatusCode?: number;
};

export type FileRateLimitRule = {
    clientWhitelist?: Array<(string)> | null;
    enableRateLimiting?: boolean;
    period?: (string) | null;
    periodTimespan?: number;
    limit?: number;
};

export type FileRoute = {
    downstreamPathTemplate?: (string) | null;
    upstreamPathTemplate?: (string) | null;
    upstreamHttpMethod?: Array<(string)> | null;
    downstreamHttpMethod?: (string) | null;
    addHeadersToRequest?: {
        [key: string]: ((string) | null);
    } | null;
    upstreamHeaderTransform?: {
        [key: string]: ((string) | null);
    } | null;
    downstreamHeaderTransform?: {
        [key: string]: ((string) | null);
    } | null;
    addClaimsToRequest?: {
        [key: string]: ((string) | null);
    } | null;
    routeClaimsRequirement?: {
        [key: string]: ((string) | null);
    } | null;
    addQueriesToRequest?: {
        [key: string]: ((string) | null);
    } | null;
    changeDownstreamPathTemplate?: {
        [key: string]: ((string) | null);
    } | null;
    requestIdKey?: (string) | null;
    fileCacheOptions?: FileCacheOptions;
    routeIsCaseSensitive?: boolean;
    serviceName?: (string) | null;
    serviceNamespace?: (string) | null;
    downstreamScheme?: (string) | null;
    qoSOptions?: FileQoSOptions;
    loadBalancerOptions?: FileLoadBalancerOptions;
    rateLimitOptions?: FileRateLimitRule;
    authenticationOptions?: FileAuthenticationOptions;
    httpHandlerOptions?: FileHttpHandlerOptions;
    downstreamHostAndPorts?: Array<FileHostAndPort> | null;
    upstreamHost?: (string) | null;
    key?: (string) | null;
    delegatingHandlers?: Array<(string)> | null;
    priority?: number;
    timeout?: number;
    dangerousAcceptAnyServerCertificateValidator?: boolean;
    securityOptions?: FileSecurityOptions;
    downstreamHttpVersion?: (string) | null;
};

export type FileSecurityOptions = {
    ipAllowedList?: Array<(string)> | null;
    ipBlockedList?: Array<(string)> | null;
};

export type FileServiceDiscoveryProvider = {
    scheme?: (string) | null;
    host?: (string) | null;
    port?: number;
    type?: (string) | null;
    token?: (string) | null;
    configurationKey?: (string) | null;
    pollingInterval?: number;
    namespace?: (string) | null;
};

export type FindByUserNameInput = {
    userName?: (string) | null;
};

export type FindTenantByNameInput = {
    name?: (string) | null;
};

export type FindTenantResultDto = {
    success?: boolean;
    tenantId?: (string) | null;
    name?: (string) | null;
    normalizedName?: (string) | null;
    isActive?: boolean;
};

export type GetDataTypeInput = {
    entityModelId?: string;
};

export type GetDataTypeOutput = {
    id?: string;
    /**
     * 枚举编码
     */
    code?: (string) | null;
    /**
     * 枚举描述
     */
    description?: (string) | null;
};

export type GetEntityModelInput = {
    id?: string;
};

export type GetEntityModelOutput = {
    id?: string;
    /**
     * 编码
     */
    code?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    relationalType?: RelationalType;
    /**
     * 实体模型属性集合
     */
    entityModelProperties?: Array<GetEntityModelPropertyOutput> | null;
    entityModelOutputs?: Array<GetEntityModelOutput> | null;
};

export type GetEntityModelPropertyOutput = {
    id?: string;
    /**
     * 名称
     */
    code?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 必填
     */
    isRequired?: boolean;
    /**
     * 字符串最大长度
     */
    maxLength?: (number) | null;
    /**
     * 字符串最小长度
     */
    minLength?: (number) | null;
    /**
     * 当类型为decimal时的小数位数 (18,4) 中的18
     */
    decimalPrecision?: (number) | null;
    /**
     * 当类型为decimal时的字段长度 (18,4) 中的4
     */
    decimalScale?: (number) | null;
    /**
     * 枚举类型Id
     */
    enumTypeId?: (string) | null;
    isEnum?: boolean;
    enumTypeOutput?: GetEnumTypeOutput;
    /**
     * 数据类型Id
     */
    dataTypeId?: (string) | null;
    dataTypeOutput?: GetDataTypeOutput;
    /**
     * 实体模型Id
     */
    entityModelId?: string;
};

export type GetEntityModelTreeInput = {
    projectId?: string;
};

export type GetEntityModelTreeOutput = {
    /**
     * 模板id
     */
    key?: string;
    /**
     * 图标
     */
    icon?: (string) | null;
    /**
     * 描述
     */
    code?: (string) | null;
    /**
     * 描述
     */
    title?: (string) | null;
    /**
     * 父类Id
     */
    parentId?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    relationalType?: RelationalType;
    children?: Array<GetEntityModelTreeOutput> | null;
};

export type GetEnumTypeOutput = {
    id?: string;
    /**
     * 枚举编码
     */
    code?: (string) | null;
    /**
     * 枚举描述
     */
    description?: (string) | null;
};

export type GetFeatureListResultDto = {
    groups?: Array<FeatureGroupDto> | null;
};

export type GetFeatureListResultInput = {
    providerName?: (string) | null;
    providerKey?: (string) | null;
};

export type GetOrganizationUnitRoleInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    organizationUnitId?: string;
};

export type GetOrganizationUnitRoleOutput = {
    id?: string;
    name?: (string) | null;
};

export type GetOrganizationUnitRoleOutputPagedResultDto = {
    items?: Array<GetOrganizationUnitRoleOutput> | null;
    totalCount?: number;
};

export type GetOrganizationUnitUserInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    organizationUnitId?: string;
    filter?: (string) | null;
};

export type GetOrganizationUnitUserOutput = {
    id?: string;
    userName?: (string) | null;
    email?: (string) | null;
};

export type GetOrganizationUnitUserOutputPagedResultDto = {
    items?: Array<GetOrganizationUnitUserOutput> | null;
    totalCount?: number;
};

export type GetPermissionInput = {
    providerName?: (string) | null;
    providerKey?: (string) | null;
};

export type GetQRCodeOutput = {
    /**
     * base64 二维码
     */
    qrCode?: (string) | null;
    /**
     * 密钥
     */
    secret?: (string) | null;
};

export type GetTemplateTreeOutput = {
    /**
     * 模板id
     */
    key?: string;
    templateType?: TemplateType;
    controlType?: ControlType;
    /**
     * 图标
     */
    icon?: (string) | null;
    /**
     * 模板名称
     */
    name?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 描述
     */
    title?: (string) | null;
    /**
     * 模板内容
     */
    content?: (string) | null;
    children?: Array<GetTemplateTreeOutput> | null;
};

export type GetTemplteTreeInput = {
    templateId?: string;
};

export type GetUnAddRoleInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    organizationUnitId?: string;
    filter?: (string) | null;
};

export type GetUnAddRoleOutput = {
    id?: string;
    name?: (string) | null;
};

export type GetUnAddRoleOutputPagedResultDto = {
    items?: Array<GetUnAddRoleOutput> | null;
    totalCount?: number;
};

export type GetUnAddUserInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    organizationUnitId?: string;
    filter?: (string) | null;
};

export type GetUnAddUserOutput = {
    id?: string;
    userName?: (string) | null;
    email?: (string) | null;
};

export type GetUnAddUserOutputPagedResultDto = {
    items?: Array<GetUnAddUserOutput> | null;
    totalCount?: number;
};

export type HttpStatusCode = 100 | 101 | 102 | 103 | 200 | 201 | 202 | 203 | 204 | 205 | 206 | 207 | 208 | 226 | 300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308 | 400 | 401 | 402 | 403 | 404 | 405 | 406 | 407 | 408 | 409 | 410 | 411 | 412 | 413 | 414 | 415 | 416 | 417 | 421 | 422 | 423 | 424 | 426 | 428 | 429 | 431 | 451 | 500 | 501 | 502 | 503 | 504 | 505 | 506 | 507 | 508 | 510 | 511;

export type IanaTimeZone = {
    timeZoneName?: (string) | null;
};

export type IdentityRoleCreateDto = {
    readonly extraProperties?: {
        [key: string]: unknown;
    } | null;
    name: string;
    isDefault?: boolean;
    isPublic?: boolean;
};

export type IdentityRoleDto = {
    readonly extraProperties?: {
        [key: string]: unknown;
    } | null;
    id?: string;
    name?: (string) | null;
    isDefault?: boolean;
    isStatic?: boolean;
    isPublic?: boolean;
    concurrencyStamp?: (string) | null;
};

export type IdentityRoleDtoListResultDto = {
    items?: Array<IdentityRoleDto> | null;
};

export type IdentityRoleDtoPagedResultDto = {
    items?: Array<IdentityRoleDto> | null;
    totalCount?: number;
};

export type IdentityRoleUpdateDto = {
    readonly extraProperties?: {
        [key: string]: unknown;
    } | null;
    name: string;
    isDefault?: boolean;
    isPublic?: boolean;
    concurrencyStamp?: (string) | null;
};

export type IdentityUserCreateDto = {
    readonly extraProperties?: {
        [key: string]: unknown;
    } | null;
    userName: string;
    name?: (string) | null;
    surname?: (string) | null;
    email: string;
    phoneNumber?: (string) | null;
    isActive?: boolean;
    lockoutEnabled?: boolean;
    roleNames?: Array<(string)> | null;
    password: string;
};

export type IdentityUserDto = {
    readonly extraProperties?: {
        [key: string]: unknown;
    } | null;
    id?: string;
    creationTime?: string;
    creatorId?: (string) | null;
    lastModificationTime?: (string) | null;
    lastModifierId?: (string) | null;
    isDeleted?: boolean;
    deleterId?: (string) | null;
    deletionTime?: (string) | null;
    tenantId?: (string) | null;
    userName?: (string) | null;
    name?: (string) | null;
    surname?: (string) | null;
    email?: (string) | null;
    emailConfirmed?: boolean;
    phoneNumber?: (string) | null;
    phoneNumberConfirmed?: boolean;
    isActive?: boolean;
    lockoutEnabled?: boolean;
    accessFailedCount?: number;
    lockoutEnd?: (string) | null;
    concurrencyStamp?: (string) | null;
    entityVersion?: number;
    lastPasswordChangeTime?: (string) | null;
};

export type IdentityUserUpdateDto = {
    readonly extraProperties?: {
        [key: string]: unknown;
    } | null;
    userName: string;
    name?: (string) | null;
    surname?: (string) | null;
    email: string;
    phoneNumber?: (string) | null;
    isActive?: boolean;
    lockoutEnabled?: boolean;
    roleNames?: Array<(string)> | null;
    password?: (string) | null;
    concurrencyStamp?: (string) | null;
};

export type IdInput = {
    id?: string;
};

export type InterfaceMethodApiDescriptionModel = {
    name?: (string) | null;
    parametersOnMethod?: Array<MethodParameterApiDescriptionModel> | null;
    returnValue?: ReturnValueApiDescriptionModel;
};

export type IStringValueType = {
    readonly name?: (string) | null;
    readonly properties?: {
        [key: string]: unknown;
    } | null;
    validator?: IValueValidator;
};

export type IValueValidator = {
    readonly name?: (string) | null;
    readonly properties?: {
        [key: string]: unknown;
    } | null;
};

export type LanguageInfo = {
    cultureName?: (string) | null;
    uiCultureName?: (string) | null;
    displayName?: (string) | null;
    readonly twoLetterISOLanguageName?: (string) | null;
};

export type LocalizableStringDto = {
    name?: (string) | null;
    resource?: (string) | null;
};

export type LockUserInput = {
    userId?: string;
    locked?: boolean;
};

/**
 * 登录
 */
export type Login2FAInput = {
    /**
     * 用户名或者邮箱
     */
    name?: (string) | null;
    /**
     * 密码
     */
    password?: (string) | null;
    /**
     * 双因素验证码
     */
    code?: (string) | null;
};

/**
 * 登录
 */
export type LoginInput = {
    /**
     * 用户名或者邮箱
     */
    name?: (string) | null;
    /**
     * 密码
     */
    password?: (string) | null;
};

export type LoginOutput = {
    id?: string;
    name?: (string) | null;
    userName?: (string) | null;
    token?: (string) | null;
    roles?: Array<(string)> | null;
};

export type LoginResultType = 1 | 2 | 3 | 4 | 5;

/**
 * 消息等级
 */
export type MessageLevel = 10 | 20 | 30;

/**
 * 消息类型
 */
export type MessageType = 10 | 20;

export type MethodParameterApiDescriptionModel = {
    name?: (string) | null;
    typeAsString?: (string) | null;
    type?: (string) | null;
    typeSimple?: (string) | null;
    isOptional?: boolean;
    defaultValue?: unknown;
};

export type ModuleApiDescriptionModel = {
    rootPath?: (string) | null;
    remoteServiceName?: (string) | null;
    controllers?: {
        [key: string]: ControllerApiDescriptionModel;
    } | null;
};

export type ModuleExtensionDto = {
    entities?: {
        [key: string]: EntityExtensionDto;
    } | null;
    configuration?: {
        [key: string]: unknown;
    } | null;
};

export type MultiTenancyInfoDto = {
    isEnabled?: boolean;
};

export type MyProfileOutput = {
    tenantId?: (string) | null;
    userName?: (string) | null;
    name?: (string) | null;
    surname?: (string) | null;
    email?: (string) | null;
    phoneNumber?: (string) | null;
    isActive?: boolean;
    twoFactorEnabled?: boolean;
};

export type NameValue = {
    name?: (string) | null;
    value?: (string) | null;
};

export type ObjectExtensionsDto = {
    modules?: {
        [key: string]: ModuleExtensionDto;
    } | null;
    enums?: {
        [key: string]: ExtensionEnumDto;
    } | null;
};

export type PageEntityModelInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    id?: string;
    filter?: (string) | null;
};

export type PageEntityModelPropertyOutput = {
    id?: (string) | null;
    /**
     * 实体模型Id
     */
    entityModelId?: string;
    /**
     * 名称
     */
    code?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 必填
     */
    isRequired?: boolean;
    /**
     * 字符串最大长度
     */
    maxLength?: (number) | null;
    /**
     * 字符串最小长度
     */
    minLength?: (number) | null;
    /**
     * 当类型为decimal时的小数位数 (18,4) 中的18
     */
    decimalPrecision?: (number) | null;
    /**
     * 当类型为decimal时的字段长度 (18,4) 中的4
     */
    decimalScale?: (number) | null;
    dataTypeId?: string;
    isEnum?: boolean;
    dataTypeCode?: (string) | null;
    dataTypeDescription?: (string) | null;
    /**
     * 允许作为查询条件
     */
    allowSearch?: boolean;
    /**
     * 允许添加
     */
    allowAdd?: boolean;
    /**
     * 允许编辑
     */
    allowEdit?: boolean;
};

export type PageEntityModelPropertyOutputPagedResultDto = {
    items?: Array<PageEntityModelPropertyOutput> | null;
    totalCount?: number;
};

export type PageEnumTypeInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    id?: string;
    filter?: (string) | null;
};

export type PageEnumTypeOutput = {
    id?: (string) | null;
    /**
     * 实体模型Id
     */
    entityModelId?: string;
    /**
     * 名称
     */
    code?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    creationTime?: string;
};

export type PageEnumTypeOutputPagedResultDto = {
    items?: Array<PageEnumTypeOutput> | null;
    totalCount?: number;
};

export type PageEnumTypePropertyInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    id?: string;
    filter?: (string) | null;
};

export type PageEnumTypePropertyOutput = {
    id?: (string) | null;
    /**
     * 名称
     */
    code?: (string) | null;
    /**
     * 名称
     */
    value?: number;
    /**
     * 描述
     */
    description?: (string) | null;
    creationTime?: string;
};

export type PageEnumTypePropertyOutputPagedResultDto = {
    items?: Array<PageEnumTypePropertyOutput> | null;
    totalCount?: number;
};

export type PageIdentityUserOutput = {
    readonly extraProperties?: {
        [key: string]: unknown;
    } | null;
    id?: string;
    creationTime?: string;
    creatorId?: (string) | null;
    lastModificationTime?: (string) | null;
    lastModifierId?: (string) | null;
    isDeleted?: boolean;
    deleterId?: (string) | null;
    deletionTime?: (string) | null;
    tenantId?: (string) | null;
    userName?: (string) | null;
    name?: (string) | null;
    surname?: (string) | null;
    email?: (string) | null;
    emailConfirmed?: boolean;
    phoneNumber?: (string) | null;
    phoneNumberConfirmed?: boolean;
    isActive?: boolean;
    lockoutEnabled?: boolean;
    accessFailedCount?: number;
    lockoutEnd?: (string) | null;
    concurrencyStamp?: (string) | null;
    entityVersion?: number;
    lastPasswordChangeTime?: (string) | null;
    /**
     * 是否开启双因素验证码
     */
    twoFactorEnabled?: boolean;
};

export type PageIdentityUserOutputPagedResultDto = {
    items?: Array<PageIdentityUserOutput> | null;
    totalCount?: number;
};

/**
 * 创建语言
 */
export type PageLanguageInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    filter?: (string) | null;
};

/**
 * 创建语言
 */
export type PageLanguageOutput = {
    /**
     * 语言Id
     */
    id?: string;
    /**
     * 语言名称
     */
    cultureName?: (string) | null;
    /**
     * Ui语言名称
     */
    uiCultureName?: (string) | null;
    /**
     * 显示名称
     */
    displayName?: (string) | null;
    /**
     * 图标
     */
    flagIcon?: (string) | null;
    /**
     * 是否启用
     */
    isEnabled?: boolean;
    /**
     * 创建时间
     */
    creationTime?: string;
    /**
     * 是否是默认语言
     */
    isDefault?: boolean;
};

export type PageLanguageOutputPagedResultDto = {
    items?: Array<PageLanguageOutput> | null;
    totalCount?: number;
};

/**
 * 创建语言文本
 */
export type PageLanguageTextInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    /**
     * 语言
     */
    cultureName?: (string) | null;
    /**
     * 资源
     */
    resourceName?: (string) | null;
    /**
     * 查询条件 name or value
     */
    filter?: (string) | null;
};

/**
 * 创建语言文本
 */
export type PageLanguageTextOutput = {
    /**
     * 资源名称
     */
    resourceName?: (string) | null;
    /**
     * 名称
     */
    name?: (string) | null;
    /**
     * 值
     */
    value?: (string) | null;
};

export type PageLanguageTextOutputPagedResultDto = {
    items?: Array<PageLanguageTextOutput> | null;
    totalCount?: number;
};

export type PageProjectInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    filter?: (string) | null;
};

export type PageTemplateInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    filter?: (string) | null;
};

export type PageTenantConnectionStringInput = {
    /**
     * 租户id
     */
    id?: string;
    /**
     * 连接字符串名称
     */
    name?: (string) | null;
    /**
     * 连接字符串地址
     */
    value?: (string) | null;
};

export type PageTenantConnectionStringOutput = {
    /**
     * 租户id
     */
    tenantId?: string;
    /**
     * 连接字符串名称
     */
    name?: (string) | null;
    /**
     * 连接字符串地址
     */
    value?: (string) | null;
};

export type PageTenantConnectionStringOutputPagedResultDto = {
    items?: Array<PageTenantConnectionStringOutput> | null;
    totalCount?: number;
};

/**
 * 分页查询模板
 */
export type PageTextTemplateInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    /**
     * 名称
     */
    name?: (string) | null;
    /**
     * 编码
     */
    code?: (string) | null;
    /**
     * 内容
     */
    content?: (string) | null;
    /**
     * 开始创建时间
     */
    startCreationTime?: (string) | null;
    /**
     * 结束创建时间
     */
    endCreationTime?: (string) | null;
};

/**
 * 分页查询模板
 */
export type PageTextTemplateOutput = {
    /**
     * 模板Id
     */
    id?: string;
    /**
     * 名称
     */
    name?: (string) | null;
    /**
     * 编码
     */
    code?: (string) | null;
    /**
     * 内容
     */
    content?: (string) | null;
    /**
     * 语言
     */
    cultureName?: (string) | null;
    /**
     * 创建时间
     */
    creationTime?: string;
};

export type PageTextTemplateOutputPagedResultDto = {
    items?: Array<PageTextTemplateOutput> | null;
    totalCount?: number;
};

export type PagingAuditLogActionOutput = {
    id?: string;
    tenantId?: (string) | null;
    auditLogId?: string;
    serviceName?: (string) | null;
    methodName?: (string) | null;
    parameters?: (string) | null;
    executionTime?: (string) | null;
    executionDuration?: number;
    extraProperties?: {
        [key: string]: unknown;
    } | null;
};

export type PagingAuditLogInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    /**
     * 排序
     */
    sorting?: (string) | null;
    /**
     * 开始时间
     */
    startTime?: (string) | null;
    /**
     * 结束时间
     */
    endTime?: (string) | null;
    /**
     * 请求方法
     */
    httpMethod?: (string) | null;
    /**
     * 请求地址
     */
    url?: (string) | null;
    /**
     * 用户Id
     */
    userId?: (string) | null;
    /**
     * 用户名
     */
    userName?: (string) | null;
    /**
     * 应用程序名称
     */
    applicationName?: (string) | null;
    /**
     * RequestId
     */
    correlationId?: (string) | null;
    /**
     * 最大执行时间
     */
    maxExecutionDuration?: (number) | null;
    /**
     * 最小执行时间
     */
    minExecutionDuration?: (number) | null;
    /**
     * 是否有异常
     */
    hasException?: (boolean) | null;
    httpStatusCode?: HttpStatusCode;
    /**
     * 客户端IP
     */
    clientIpAddress?: (string) | null;
};

export type PagingAuditLogOutput = {
    applicationName?: (string) | null;
    userId?: (string) | null;
    userName?: (string) | null;
    tenantId?: (string) | null;
    tenantName?: (string) | null;
    impersonatorUserId?: (string) | null;
    impersonatorTenantId?: (string) | null;
    executionTime?: (string) | null;
    executionDuration?: number;
    clientIpAddress?: (string) | null;
    clientName?: (string) | null;
    clientId?: (string) | null;
    correlationId?: (string) | null;
    browserInfo?: (string) | null;
    httpMethod?: (string) | null;
    url?: (string) | null;
    exceptions?: (string) | null;
    comments?: (string) | null;
    httpStatusCode?: (number) | null;
    entityChanges?: Array<PagingEntityChangeOutput> | null;
    actions?: Array<PagingAuditLogActionOutput> | null;
};

export type PagingAuditLogOutputPagedResultDto = {
    items?: Array<PagingAuditLogOutput> | null;
    totalCount?: number;
};

export type PagingDataDictionaryDetailInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    dataDictionaryId?: string;
    filter?: (string) | null;
};

export type PagingDataDictionaryDetailOutput = {
    id?: string;
    /**
     * 所属字典Id
     */
    dataDictionaryId?: string;
    /**
     * 字典明细编码
     */
    code?: (string) | null;
    /**
     * 展现列表时排序用
     */
    order?: number;
    /**
     * 英文显示名
     */
    displayText?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 启/停用(默认启用)
     */
    isEnabled?: boolean;
};

export type PagingDataDictionaryDetailOutputPagedResultDto = {
    items?: Array<PagingDataDictionaryDetailOutput> | null;
    totalCount?: number;
};

export type PagingDataDictionaryInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    filter?: (string) | null;
};

export type PagingDataDictionaryOutput = {
    id?: string;
    /**
     * 字典编码
     */
    code?: (string) | null;
    /**
     * 显示名
     */
    displayText?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
};

export type PagingDataDictionaryOutputPagedResultDto = {
    items?: Array<PagingDataDictionaryOutput> | null;
    totalCount?: number;
};

export type PagingEntityChangeOutput = {
    id?: string;
    auditLogId?: string;
    tenantId?: (string) | null;
    changeTime?: (string) | null;
    changeType?: EntityChangeType;
    changeTypeDescription?: (string) | null;
    entityTenantId?: (string) | null;
    entityId?: (string) | null;
    entityTypeFullName?: (string) | null;
    propertyChanges?: Array<PagingEntityPropertyChangeOutput> | null;
    extraProperties?: {
        [key: string]: unknown;
    } | null;
};

export type PagingEntityPropertyChangeOutput = {
    id?: string;
    tenantId?: (string) | null;
    entityChangeId?: string;
    newValue?: (string) | null;
    originalValue?: (string) | null;
    propertyName?: (string) | null;
    propertyTypeFullName?: (string) | null;
};

export type PagingIdentitySecurityLogInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    /**
     * 排序
     */
    sorting?: (string) | null;
    /**
     * 开始时间
     */
    startTime?: (string) | null;
    /**
     * 结束时间
     */
    endTime?: (string) | null;
    identity?: (string) | null;
    /**
     * 请求地址
     */
    action?: (string) | null;
    /**
     * 用户Id
     */
    userId?: (string) | null;
    /**
     * 用户名
     */
    userName?: (string) | null;
    /**
     * 应用程序名称
     */
    applicationName?: (string) | null;
    /**
     * RequestId
     */
    correlationId?: (string) | null;
    /**
     * ClientId
     */
    clientId?: (string) | null;
};

export type PagingIdentitySecurityLogOutput = {
    id?: string;
    tenantId?: (string) | null;
    applicationName?: (string) | null;
    identity?: (string) | null;
    action?: (string) | null;
    userId?: (string) | null;
    userName?: (string) | null;
    tenantName?: (string) | null;
    clientId?: (string) | null;
    correlationId?: (string) | null;
    clientIpAddress?: (string) | null;
    browserInfo?: (string) | null;
    creationTime?: string;
};

export type PagingIdentitySecurityLogOutputPagedResultDto = {
    items?: Array<PagingIdentitySecurityLogOutput> | null;
    totalCount?: number;
};

export type PagingNotificationInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    /**
     * 标题
     */
    title?: (string) | null;
    /**
     * 内容
     */
    content?: (string) | null;
    /**
     * 发送者Id
     */
    senderUserId?: (string) | null;
    /**
     * 发送者名称
     */
    senderUserName?: (string) | null;
    /**
     * 接受者Id
     */
    receiverUserId?: (string) | null;
    /**
     * 接受者名称
     */
    receiverUserName?: (string) | null;
    /**
     * 是否已读
     */
    read?: (boolean) | null;
    /**
     * 已读开始时间
     */
    startReadTime?: (string) | null;
    /**
     * 已读结束时间
     */
    endReadTime?: (string) | null;
    messageType?: MessageType;
    messageLevel?: MessageLevel;
};

export type PagingNotificationOutput = {
    id?: string;
    /**
     * 租户id
     */
    tenantId?: (string) | null;
    /**
     * 消息标题
     */
    title?: (string) | null;
    /**
     * 消息内容
     */
    content?: (string) | null;
    messageType?: MessageType;
    readonly messageTypeName?: (string) | null;
    messageLevel?: MessageLevel;
    readonly messageLevelName?: (string) | null;
    /**
     * 发送人
     */
    senderUserId?: string;
    /**
     * 发送人用户名
     */
    senderUserName?: (string) | null;
    /**
     * 订阅人
     * 消息类型是广播消息时，订阅人为空
     */
    receiveUserId?: (string) | null;
    /**
     * 接收人用户名
     * 消息类型是广播消息时，订接收人用户名为空
     */
    receiveUserName?: (string) | null;
    /**
     * 是否已读
     */
    read?: boolean;
    /**
     * 已读时间
     */
    readTime?: (string) | null;
    creationTime?: string;
};

export type PagingNotificationOutputPagedResultDto = {
    items?: Array<PagingNotificationOutput> | null;
    totalCount?: number;
};

export type PagingNotificationSubscriptionInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    notificationId?: string;
    /**
     * 接受者Id
     */
    receiverUserId?: (string) | null;
    /**
     * 接受者名称
     */
    receiverUserName?: (string) | null;
    /**
     * 是否已读
     */
    read?: (boolean) | null;
    /**
     * 已读开始时间
     */
    startReadTime?: (string) | null;
    /**
     * 已读结束时间
     */
    endReadTime?: (string) | null;
};

export type PagingNotificationSubscriptionOutput = {
    id?: string;
    /**
     * 租户id
     */
    tenantId?: (string) | null;
    /**
     * 消息Id
     */
    notificationId?: string;
    /**
     * 接收人id
     */
    receiveUserId?: string;
    /**
     * 接收人用户名
     */
    receiveUserName?: (string) | null;
    /**
     * 是否已读
     */
    read?: boolean;
    /**
     * 已读时间
     */
    readTime?: string;
    /**
     * 消息标题
     */
    title?: (string) | null;
    /**
     * 消息内容
     */
    content?: (string) | null;
    messageType?: MessageType;
    readonly messageTypeName?: (string) | null;
    messageLevel?: MessageLevel;
    readonly messageLevelName?: (string) | null;
    /**
     * 发送人
     */
    senderUserId?: string;
    /**
     * 发送人用户名
     */
    senderUserName?: (string) | null;
};

export type PagingNotificationSubscriptionOutputPagedResultDto = {
    items?: Array<PagingNotificationSubscriptionOutput> | null;
    totalCount?: number;
};

export type PagingRoleListInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    filter?: (string) | null;
};

export type PagingTenantInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    filter?: (string) | null;
};

export type PagingUserListInput = {
    /**
     * 当前页面.默认从1开始
     */
    pageIndex?: number;
    /**
     * 每页多少条.每页显示多少记录
     */
    pageSize?: number;
    /**
     * 跳过多少条
     */
    readonly skipCount?: number;
    /**
     * 关键字
     */
    filter?: (string) | null;
};

export type ParameterApiDescriptionModel = {
    nameOnMethod?: (string) | null;
    name?: (string) | null;
    jsonName?: (string) | null;
    type?: (string) | null;
    typeSimple?: (string) | null;
    isOptional?: boolean;
    defaultValue?: unknown;
    constraintTypes?: Array<(string)> | null;
    bindingSourceId?: (string) | null;
    descriptorName?: (string) | null;
};

export type PermissionOutput = {
    grants?: Array<(string)> | null;
    allGrants?: Array<(string)> | null;
    permissions?: Array<PermissionTreeDto> | null;
};

export type PermissionTreeDto = {
    title?: (string) | null;
    key?: (string) | null;
    children?: Array<PermissionTreeDto> | null;
};

export type PreViewCodeInput = {
    templateId?: string;
    projectId?: string;
};

export type ProjectDto = {
    id?: string;
    creationTime?: string;
    creatorId?: (string) | null;
    lastModificationTime?: (string) | null;
    lastModifierId?: (string) | null;
    tenantId?: (string) | null;
    /**
     * 负责人
     */
    owner?: (string) | null;
    /**
     * 名称空间
     */
    nameSpace?: (string) | null;
    /**
     * 公司名称
     */
    companyName?: (string) | null;
    /**
     * 项目名称
     */
    projectName?: (string) | null;
    /**
     * 备注
     */
    remark?: (string) | null;
    /**
     * 是否支持多租户
     */
    supportTenant?: boolean;
};

export type ProjectDtoPagedResultDto = {
    items?: Array<ProjectDto> | null;
    totalCount?: number;
};

export type PropertyApiDescriptionModel = {
    name?: (string) | null;
    jsonName?: (string) | null;
    type?: (string) | null;
    typeSimple?: (string) | null;
    isRequired?: boolean;
    minLength?: (number) | null;
    maxLength?: (number) | null;
    minimum?: (string) | null;
    maximum?: (string) | null;
    regex?: (string) | null;
};

export type RelationalType = 10 | 20;

export type RemoteServiceErrorInfo = {
    code?: (string) | null;
    message?: (string) | null;
    details?: (string) | null;
    data?: {
        [key: string]: unknown;
    } | null;
    validationErrors?: Array<RemoteServiceValidationErrorInfo> | null;
};

export type RemoteServiceErrorResponse = {
    error?: RemoteServiceErrorInfo;
};

export type RemoteServiceValidationErrorInfo = {
    message?: (string) | null;
    members?: Array<(string)> | null;
};

export type RemoveRoleToOrganizationUnitInput = {
    roleId?: string;
    organizationUnitId?: string;
};

export type RemoveUserToOrganizationUnitInput = {
    userId?: string;
    organizationUnitId?: string;
};

export type ResetTwoFactorInput = {
    userId?: string;
};

export type ReturnValueApiDescriptionModel = {
    type?: (string) | null;
    typeSimple?: (string) | null;
};

export type SendBroadCastMessageInput = {
    /**
     * 消息标题
     */
    title?: (string) | null;
    /**
     * 消息内容
     */
    content?: (string) | null;
};

export type SendCommonMessageInput = {
    /**
     * 消息标题
     */
    title?: (string) | null;
    /**
     * 消息内容
     */
    content?: (string) | null;
    /**
     * 发送人
     */
    receiveUserId?: string;
    /**
     * 发送人名称
     */
    receiveUserName?: (string) | null;
};

export type SetBatchReadInput = {
    ids?: Array<(string)> | null;
};

export type SetDataDictinaryDetailInput = {
    dataDictionaryId?: string;
    dataDictionayDetailId?: string;
    isEnabled: boolean;
};

export type SetReadInput = {
    id?: string;
};

export type SettingItemOutput = {
    /**
     * 名称
     */
    name?: (string) | null;
    /**
     * 显示名称
     */
    displayName?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 值
     */
    value?: (string) | null;
    /**
     * 前端控件类型
     */
    type?: (string) | null;
};

export type SettingOutput = {
    /**
     * 分组
     */
    group?: (string) | null;
    /**
     * 分组显示名称
     */
    groupDisplayName?: (string) | null;
    settingItemOutput?: Array<SettingItemOutput> | null;
};

export type StringInt32KeyValuePair = {
    key?: (string) | null;
    value?: number;
};

export type StringStringFromSelector = {
    readonly value?: (string) | null;
    readonly label?: (string) | null;
};

/**
 * 模板明细
 */
export type TemplateDetailDto = {
    id?: string;
    /**
     * 模板id
     */
    templateId?: string;
    templateType?: TemplateType;
    controlType?: ControlType;
    /**
     * 父级id
     */
    parentId?: (string) | null;
    /**
     * 模板名称
     */
    name?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 模板内容
     */
    content?: (string) | null;
};

/**
 * 模板
 */
export type TemplateDto = {
    id?: string;
    creationTime?: string;
    creatorId?: (string) | null;
    lastModificationTime?: (string) | null;
    lastModifierId?: (string) | null;
    tenantId?: (string) | null;
    /**
     * 名称
     */
    name?: (string) | null;
    /**
     * 备注
     */
    remark?: (string) | null;
    /**
     * 关联属性1:N 模板明细集合
     */
    templateDetails?: Array<TemplateDetailDto> | null;
};

export type TemplateDtoPagedResultDto = {
    items?: Array<TemplateDto> | null;
    totalCount?: number;
};

export type TemplateTreeDto = {
    /**
     * 模板id
     */
    key?: string;
    templateType?: TemplateType;
    controlType?: ControlType;
    /**
     * 图标
     */
    icon?: (string) | null;
    /**
     * 是否是文件夹
     */
    isFolder?: boolean;
    /**
     * 模板名称
     */
    name?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 描述
     */
    title?: (string) | null;
    /**
     * 模板内容
     */
    content?: (string) | null;
    children?: Array<TemplateTreeDto> | null;
};

export type TemplateType = 10 | 20;

export type TenantCreateDto = {
    readonly extraProperties?: {
        [key: string]: unknown;
    } | null;
    name: string;
    adminEmailAddress: string;
    adminPassword: string;
};

export type TenantDto = {
    readonly extraProperties?: {
        [key: string]: unknown;
    } | null;
    id?: string;
    name?: (string) | null;
    concurrencyStamp?: (string) | null;
};

export type TenantDtoPagedResultDto = {
    items?: Array<TenantDto> | null;
    totalCount?: number;
};

export type TimeZone = {
    iana?: IanaTimeZone;
    windows?: WindowsTimeZone;
};

export type TimingDto = {
    timeZone?: TimeZone;
};

export type TreeOutput = {
    title?: (string) | null;
    key?: string;
    children?: Array<TreeOutput> | null;
};

export type TypeApiDescriptionModel = {
    baseType?: (string) | null;
    isEnum?: boolean;
    enumNames?: Array<(string)> | null;
    enumValues?: Array<unknown> | null;
    genericArguments?: Array<(string)> | null;
    properties?: Array<PropertyApiDescriptionModel> | null;
};

export type UpdateAggregateInput = {
    id?: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 描述
     */
    description: string;
};

export type UpdateDataDictinaryInput = {
    id?: string;
    code?: (string) | null;
    displayText?: (string) | null;
    description?: (string) | null;
};

export type UpdateDetailInput = {
    dataDictionaryId?: string;
    id?: string;
    displayText?: (string) | null;
    description?: (string) | null;
    order?: number;
};

export type UpdateEntityModelInput = {
    id?: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 描述
     */
    description: string;
    relationalType?: RelationalType;
};

export type UpdateEntityModelPropertyInput = {
    id?: string;
    propertyId?: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 描述
     */
    description: string;
    /**
     * 必填
     */
    isRequired?: boolean;
    /**
     * 字符串最大长度
     */
    maxLength?: (number) | null;
    /**
     * 字符串最小长度
     */
    minLength?: (number) | null;
    /**
     * 当类型为decimal时的小数位数 (18,4) 中的18
     */
    decimalPrecision?: (number) | null;
    /**
     * 当类型为decimal时的字段长度 (18,4) 中的4
     */
    decimalScale?: (number) | null;
    /**
     * 枚举类型Id
     */
    enumTypeId?: (string) | null;
    /**
     * 数据类型Id
     */
    dataTypeId?: (string) | null;
    /**
     * 实体模型Id
     */
    entityModelId?: string;
    /**
     * 允许作为查询条件
     */
    allowSearch?: boolean;
    /**
     * 允许添加
     */
    allowAdd?: boolean;
    /**
     * 允许编辑
     */
    allowEdit?: boolean;
};

export type UpdateEnumTypeInput = {
    id?: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 描述
     */
    description: string;
};

export type UpdateEnumTypePropertyInput = {
    /**
     * Id
     */
    enumTypeId?: string;
    /**
     * Id
     */
    id?: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 枚举值
     */
    value?: number;
    /**
     * 描述
     */
    description: string;
};

export type UpdateFeatureDto = {
    name?: (string) | null;
    value?: (string) | null;
};

export type UpdateFeatureInput = {
    providerName?: (string) | null;
    providerKey?: (string) | null;
    updateFeaturesDto?: UpdateFeaturesDto;
};

export type UpdateFeaturesDto = {
    features?: Array<UpdateFeatureDto> | null;
};

/**
 * 删除语言
 */
export type UpdateLanguageInput = {
    /**
     * 语言Id
     */
    id?: string;
    /**
     * 语言名称
     */
    cultureName?: (string) | null;
    /**
     * Ui语言名称
     */
    uiCultureName?: (string) | null;
    /**
     * 显示名称
     */
    displayName?: (string) | null;
    /**
     * 图标
     */
    flagIcon?: (string) | null;
    /**
     * 是否启用
     */
    isEnabled?: boolean;
};

/**
 * 删除语言文本
 */
export type UpdateLanguageTextInput = {
    /**
     * 资源名称
     */
    resourceName: string;
    /**
     * 语言名称
     */
    cultureName: string;
    /**
     * 名称
     */
    name: string;
    /**
     * 值
     */
    value: string;
};

export type UpdateOrganizationUnitInput = {
    displayName?: (string) | null;
    id?: string;
};

export type UpdatePermissionDto = {
    name?: (string) | null;
    isGranted?: boolean;
};

export type UpdatePermissionsDto = {
    permissions?: Array<UpdatePermissionDto> | null;
};

export type UpdateProjectInput = {
    id?: string;
    /**
     * 负责人
     */
    owner?: (string) | null;
    /**
     * 公司名称
     */
    companyName?: (string) | null;
    /**
     * 项目名称
     */
    projectName?: (string) | null;
    /**
     * 备注
     */
    remark?: (string) | null;
    /**
     * 是否支持多租户
     */
    supportTenant?: boolean;
};

export type UpdateRoleInput = {
    roleId?: string;
    roleInfo?: IdentityRoleUpdateDto;
};

export type UpdateRolePermissionsInput = {
    providerName?: (string) | null;
    providerKey?: (string) | null;
    updatePermissionsDto?: UpdatePermissionsDto;
};

export type UpdateSettingInput = {
    values?: {
        [key: string]: ((string) | null);
    } | null;
};

export type UpdateTemplateDetailContentInput = {
    /**
     * 模板id
     */
    templateId?: string;
    templateDetailId?: string;
    /**
     * 模板内容
     */
    content?: (string) | null;
};

export type UpdateTemplateDetailInput = {
    /**
     * 模板id
     */
    templateId?: string;
    templateDetailId?: string;
    controlType?: ControlType;
    /**
     * 模板类型
     */
    name?: (string) | null;
    /**
     * 描述
     */
    description?: (string) | null;
    /**
     * 模板内容
     */
    content?: (string) | null;
};

export type UpdateTemplateInput = {
    id?: string;
    /**
     * 名称
     */
    name?: (string) | null;
    /**
     * 备注
     */
    remark?: (string) | null;
};

export type UpdateTenantInput = {
    id?: string;
    name?: (string) | null;
};

/**
 * 更新模板
 */
export type UpdateTextTemplateInput = {
    /**
     * 模板Id
     */
    id?: string;
    /**
     * 名称
     */
    name: string;
    /**
     * 编码
     */
    code: string;
    /**
     * 内容
     */
    content: string;
    /**
     * 语言
     */
    cultureName: string;
};

export type UpdateUserInput = {
    userId?: string;
    userInfo?: IdentityUserUpdateDto;
};

export type UserLoginInfo = {
    userNameOrEmailAddress: string;
    password: string;
    rememberMe?: boolean;
};

export type WindowsTimeZone = {
    timeZoneId?: (string) | null;
};

export type GetApiAbpApiDefinitionData = {
    query?: {
        IncludeTypes?: boolean;
    };
};

export type GetApiAbpApiDefinitionResponse = (ApplicationApiDescriptionModel);

export type GetApiAbpApiDefinitionError = (RemoteServiceErrorResponse);

export type GetApiAbpApplicationConfigurationData = {
    query?: {
        IncludeLocalizationResources?: boolean;
    };
};

export type GetApiAbpApplicationConfigurationResponse = (ApplicationConfigurationDto);

export type GetApiAbpApplicationConfigurationError = (RemoteServiceErrorResponse);

export type GetApiAbpApplicationLocalizationData = {
    query: {
        CultureName: string;
        OnlyDynamics?: boolean;
    };
};

export type GetApiAbpApplicationLocalizationResponse = (ApplicationLocalizationDto);

export type GetApiAbpApplicationLocalizationError = (RemoteServiceErrorResponse);

export type PostApiAppAccountLoginData = {
    body?: LoginInput;
};

export type PostApiAppAccountLoginResponse = (LoginOutput);

export type PostApiAppAccountLoginError = (RemoteServiceErrorResponse);

export type PostApiAppAccountLogin2FaData = {
    body?: Login2FAInput;
};

export type PostApiAppAccountLogin2FaResponse = (LoginOutput);

export type PostApiAppAccountLogin2FaError = (RemoteServiceErrorResponse);

export type PostAuditLogsPageData = {
    body?: PagingAuditLogInput;
};

export type PostAuditLogsPageResponse = (PagingAuditLogOutputPagedResultDto);

export type PostAuditLogsPageError = (RemoteServiceErrorResponse);

export type PostDataDictionaryPageData = {
    body?: PagingDataDictionaryInput;
};

export type PostDataDictionaryPageResponse = (PagingDataDictionaryOutputPagedResultDto);

export type PostDataDictionaryPageError = (RemoteServiceErrorResponse);

export type PostDataDictionaryPageDetailData = {
    body?: PagingDataDictionaryDetailInput;
};

export type PostDataDictionaryPageDetailResponse = (PagingDataDictionaryDetailOutputPagedResultDto);

export type PostDataDictionaryPageDetailError = (RemoteServiceErrorResponse);

export type PostDataDictionaryCreateData = {
    body?: CreateDataDictinaryInput;
};

export type PostDataDictionaryCreateResponse = (unknown);

export type PostDataDictionaryCreateError = (RemoteServiceErrorResponse);

export type PostDataDictionaryCreateDetailData = {
    body?: CreateDataDictinaryDetailInput;
};

export type PostDataDictionaryCreateDetailResponse = (unknown);

export type PostDataDictionaryCreateDetailError = (RemoteServiceErrorResponse);

export type PostDataDictionaryStatusData = {
    body?: SetDataDictinaryDetailInput;
};

export type PostDataDictionaryStatusResponse = (unknown);

export type PostDataDictionaryStatusError = (RemoteServiceErrorResponse);

export type PostDataDictionaryUpdateDetailData = {
    body?: UpdateDetailInput;
};

export type PostDataDictionaryUpdateDetailResponse = (unknown);

export type PostDataDictionaryUpdateDetailError = (RemoteServiceErrorResponse);

export type PostDataDictionaryDeleteData = {
    body?: DeleteDataDictionaryDetailInput;
};

export type PostDataDictionaryDeleteResponse = (unknown);

export type PostDataDictionaryDeleteError = (RemoteServiceErrorResponse);

export type PostDataDictionaryDeleteDataDictionaryTypeData = {
    body?: IdInput;
};

export type PostDataDictionaryDeleteDataDictionaryTypeResponse = (unknown);

export type PostDataDictionaryDeleteDataDictionaryTypeError = (RemoteServiceErrorResponse);

export type PostDataDictionaryUpdateData = {
    body?: UpdateDataDictinaryInput;
};

export type PostDataDictionaryUpdateResponse = (unknown);

export type PostDataDictionaryUpdateError = (RemoteServiceErrorResponse);

export type PostDataTypesListData = {
    body?: GetDataTypeInput;
};

export type PostDataTypesListResponse = (Array<DataTypeDto>);

export type PostDataTypesListError = (RemoteServiceErrorResponse);

export type PostEntityModelsPagePropertyData = {
    body?: PageEntityModelInput;
};

export type PostEntityModelsPagePropertyResponse = (PageEntityModelPropertyOutputPagedResultDto);

export type PostEntityModelsPagePropertyError = (RemoteServiceErrorResponse);

export type PostEntityModelsCreateAggregateData = {
    body?: CreateAggregateInput;
};

export type PostEntityModelsCreateAggregateResponse = (unknown);

export type PostEntityModelsCreateAggregateError = (RemoteServiceErrorResponse);

export type PostEntityModelsUpdateAggregateData = {
    body?: UpdateAggregateInput;
};

export type PostEntityModelsUpdateAggregateResponse = (unknown);

export type PostEntityModelsUpdateAggregateError = (RemoteServiceErrorResponse);

export type PostEntityModelsDeleteAggregateData = {
    body?: DeleteAggregateInput;
};

export type PostEntityModelsDeleteAggregateResponse = (unknown);

export type PostEntityModelsDeleteAggregateError = (RemoteServiceErrorResponse);

export type PostEntityModelsCreateEntityModelData = {
    body?: CreateEntityModelInput;
};

export type PostEntityModelsCreateEntityModelResponse = (unknown);

export type PostEntityModelsCreateEntityModelError = (RemoteServiceErrorResponse);

export type PostEntityModelsUpdateEntityModelData = {
    body?: UpdateEntityModelInput;
};

export type PostEntityModelsUpdateEntityModelResponse = (unknown);

export type PostEntityModelsUpdateEntityModelError = (RemoteServiceErrorResponse);

export type PostEntityModelsDeleteEntityModelData = {
    body?: DeleteEntityModelInput;
};

export type PostEntityModelsDeleteEntityModelResponse = (unknown);

export type PostEntityModelsDeleteEntityModelError = (RemoteServiceErrorResponse);

export type PostEntityModelsCreateEntityModelPropertyData = {
    body?: CreateEntityModelPropertyInput;
};

export type PostEntityModelsCreateEntityModelPropertyResponse = (unknown);

export type PostEntityModelsCreateEntityModelPropertyError = (RemoteServiceErrorResponse);

export type PostEntityModelsUpdateEntityModelPropertyData = {
    body?: UpdateEntityModelPropertyInput;
};

export type PostEntityModelsUpdateEntityModelPropertyResponse = (unknown);

export type PostEntityModelsUpdateEntityModelPropertyError = (RemoteServiceErrorResponse);

export type PostEntityModelsDeleteEntityModelPropertyData = {
    body?: DeleteEntityModelPropertyInput;
};

export type PostEntityModelsDeleteEntityModelPropertyResponse = (unknown);

export type PostEntityModelsDeleteEntityModelPropertyError = (RemoteServiceErrorResponse);

export type PostEntityModelsTreeData = {
    body?: GetEntityModelTreeInput;
};

export type PostEntityModelsTreeResponse = (Array<GetEntityModelTreeOutput>);

export type PostEntityModelsTreeError = (RemoteServiceErrorResponse);

export type PostEntityModelsGetData = {
    body?: GetEntityModelInput;
};

export type PostEntityModelsGetResponse = (Array<GetEntityModelOutput>);

export type PostEntityModelsGetError = (RemoteServiceErrorResponse);

export type PostEnumTypesPageData = {
    body?: PageEnumTypeInput;
};

export type PostEnumTypesPageResponse = (PageEnumTypeOutputPagedResultDto);

export type PostEnumTypesPageError = (RemoteServiceErrorResponse);

export type PostEnumTypesPagePropertyData = {
    body?: PageEnumTypePropertyInput;
};

export type PostEnumTypesPagePropertyResponse = (PageEnumTypePropertyOutputPagedResultDto);

export type PostEnumTypesPagePropertyError = (RemoteServiceErrorResponse);

export type PostEnumTypesCreateEnumTypeData = {
    body?: CreateEnumTypeInput;
};

export type PostEnumTypesCreateEnumTypeResponse = (unknown);

export type PostEnumTypesCreateEnumTypeError = (RemoteServiceErrorResponse);

export type PostEnumTypesUpdateEnumTypeData = {
    body?: UpdateEnumTypeInput;
};

export type PostEnumTypesUpdateEnumTypeResponse = (unknown);

export type PostEnumTypesUpdateEnumTypeError = (RemoteServiceErrorResponse);

export type PostEnumTypesDeleteEnumTypeData = {
    body?: DeleteEnumTypeInput;
};

export type PostEnumTypesDeleteEnumTypeResponse = (unknown);

export type PostEnumTypesDeleteEnumTypeError = (RemoteServiceErrorResponse);

export type PostEnumTypesCreateEnumTypePropertyData = {
    body?: CreateEnumTypePropertyInput;
};

export type PostEnumTypesCreateEnumTypePropertyResponse = (unknown);

export type PostEnumTypesCreateEnumTypePropertyError = (RemoteServiceErrorResponse);

export type PostEnumTypesUpdateEnumTypePropertyData = {
    body?: UpdateEnumTypePropertyInput;
};

export type PostEnumTypesUpdateEnumTypePropertyResponse = (unknown);

export type PostEnumTypesUpdateEnumTypePropertyError = (RemoteServiceErrorResponse);

export type PostEnumTypesDeleteEnumTypePropertyData = {
    body?: DeleteEnumTypePropertyInput;
};

export type PostEnumTypesDeleteEnumTypePropertyResponse = (unknown);

export type PostEnumTypesDeleteEnumTypePropertyError = (RemoteServiceErrorResponse);

export type PostFeaturesListData = {
    body?: GetFeatureListResultInput;
};

export type PostFeaturesListResponse = (GetFeatureListResultDto);

export type PostFeaturesListError = (RemoteServiceErrorResponse);

export type PostFeaturesUpdateData = {
    body?: UpdateFeatureInput;
};

export type PostFeaturesUpdateResponse = (unknown);

export type PostFeaturesUpdateError = (RemoteServiceErrorResponse);

export type PostFeaturesDeleteData = {
    body?: DeleteFeatureInput;
};

export type PostFeaturesDeleteResponse = (unknown);

export type PostFeaturesDeleteError = (RemoteServiceErrorResponse);

export type PostGeneratorPreViewCodeData = {
    body?: PreViewCodeInput;
};

export type PostGeneratorPreViewCodeResponse = (Array<TemplateTreeDto>);

export type PostGeneratorPreViewCodeError = (RemoteServiceErrorResponse);

export type PostGeneratorDownData = {
    body?: DownCodeInput;
};

export type PostGeneratorDownResponse = ((Blob | File));

export type PostGeneratorDownError = (RemoteServiceErrorResponse);

export type PostIdentitySecurityLogsPageData = {
    body?: PagingIdentitySecurityLogInput;
};

export type PostIdentitySecurityLogsPageResponse = (PagingIdentitySecurityLogOutputPagedResultDto);

export type PostIdentitySecurityLogsPageError = (RemoteServiceErrorResponse);

export type PostLanguagesAllResponse = (Array<PageLanguageOutput>);

export type PostLanguagesAllError = (RemoteServiceErrorResponse);

export type PostLanguagesPageData = {
    body?: PageLanguageInput;
};

export type PostLanguagesPageResponse = (PageLanguageOutputPagedResultDto);

export type PostLanguagesPageError = (RemoteServiceErrorResponse);

export type PostLanguagesCreateData = {
    body?: CreateLanguageInput;
};

export type PostLanguagesCreateResponse = (unknown);

export type PostLanguagesCreateError = (RemoteServiceErrorResponse);

export type PostLanguagesUpdateData = {
    body?: UpdateLanguageInput;
};

export type PostLanguagesUpdateResponse = (unknown);

export type PostLanguagesUpdateError = (RemoteServiceErrorResponse);

export type PostLanguagesDeleteData = {
    body?: DeleteLanguageInput;
};

export type PostLanguagesDeleteResponse = (unknown);

export type PostLanguagesDeleteError = (RemoteServiceErrorResponse);

export type PostLanguagesSetDefaultData = {
    body?: IdInput;
};

export type PostLanguagesSetDefaultResponse = (unknown);

export type PostLanguagesSetDefaultError = (RemoteServiceErrorResponse);

export type PostLanguageTextsAllResourceResponse = (Array<StringStringFromSelector>);

export type PostLanguageTextsAllResourceError = (RemoteServiceErrorResponse);

export type PostLanguageTextsPageData = {
    body?: PageLanguageTextInput;
};

export type PostLanguageTextsPageResponse = (PageLanguageTextOutputPagedResultDto);

export type PostLanguageTextsPageError = (RemoteServiceErrorResponse);

export type PostLanguageTextsCreateData = {
    body?: CreateLanguageTextInput;
};

export type PostLanguageTextsCreateResponse = (unknown);

export type PostLanguageTextsCreateError = (RemoteServiceErrorResponse);

export type PostLanguageTextsUpdateData = {
    body?: UpdateLanguageTextInput;
};

export type PostLanguageTextsUpdateResponse = (unknown);

export type PostLanguageTextsUpdateError = (RemoteServiceErrorResponse);

export type PostNotificationNotificationPageData = {
    body?: PagingNotificationInput;
};

export type PostNotificationNotificationPageResponse = (PagingNotificationOutputPagedResultDto);

export type PostNotificationNotificationPageError = (RemoteServiceErrorResponse);

export type PostNotificationNotificationSubscriptionPageData = {
    body?: PagingNotificationSubscriptionInput;
};

export type PostNotificationNotificationSubscriptionPageResponse = (PagingNotificationSubscriptionOutputPagedResultDto);

export type PostNotificationNotificationSubscriptionPageError = (RemoteServiceErrorResponse);

export type PostNotificationSendCommonWarningMessageData = {
    body?: SendCommonMessageInput;
};

export type PostNotificationSendCommonWarningMessageResponse = (unknown);

export type PostNotificationSendCommonWarningMessageError = (RemoteServiceErrorResponse);

export type PostNotificationSendCommonInformationMessageData = {
    body?: SendCommonMessageInput;
};

export type PostNotificationSendCommonInformationMessageResponse = (unknown);

export type PostNotificationSendCommonInformationMessageError = (RemoteServiceErrorResponse);

export type PostNotificationSendCommonErrorMessageData = {
    body?: SendCommonMessageInput;
};

export type PostNotificationSendCommonErrorMessageResponse = (unknown);

export type PostNotificationSendCommonErrorMessageError = (RemoteServiceErrorResponse);

export type PostNotificationSendBroadCastWarningMessageData = {
    body?: SendBroadCastMessageInput;
};

export type PostNotificationSendBroadCastWarningMessageResponse = (unknown);

export type PostNotificationSendBroadCastWarningMessageError = (RemoteServiceErrorResponse);

export type PostNotificationSendBroadCastInformationMessageData = {
    body?: SendBroadCastMessageInput;
};

export type PostNotificationSendBroadCastInformationMessageResponse = (unknown);

export type PostNotificationSendBroadCastInformationMessageError = (RemoteServiceErrorResponse);

export type PostNotificationSendBroadCastErrorMessageData = {
    body?: SendBroadCastMessageInput;
};

export type PostNotificationSendBroadCastErrorMessageResponse = (unknown);

export type PostNotificationSendBroadCastErrorMessageError = (RemoteServiceErrorResponse);

export type PostNotificationReadData = {
    body?: SetReadInput;
};

export type PostNotificationReadResponse = (unknown);

export type PostNotificationReadError = (RemoteServiceErrorResponse);

export type PostNotificationBatchReadData = {
    body?: SetBatchReadInput;
};

export type PostNotificationBatchReadResponse = (unknown);

export type PostNotificationBatchReadError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsTreeResponse = (Array<TreeOutput>);

export type PostOrganizationUnitsTreeError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsCreateData = {
    body?: CreateOrganizationUnitInput;
};

export type PostOrganizationUnitsCreateResponse = (unknown);

export type PostOrganizationUnitsCreateError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsDeleteData = {
    body?: IdInput;
};

export type PostOrganizationUnitsDeleteResponse = (unknown);

export type PostOrganizationUnitsDeleteError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsUpdateData = {
    body?: UpdateOrganizationUnitInput;
};

export type PostOrganizationUnitsUpdateResponse = (unknown);

export type PostOrganizationUnitsUpdateError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsAddRoleToOrganizationUnitAsyncData = {
    body?: AddRoleToOrganizationUnitInput;
};

export type PostOrganizationUnitsAddRoleToOrganizationUnitAsyncResponse = (unknown);

export type PostOrganizationUnitsAddRoleToOrganizationUnitAsyncError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsRemoveRoleFromOrganizationUnitAsyncData = {
    body?: RemoveRoleToOrganizationUnitInput;
};

export type PostOrganizationUnitsRemoveRoleFromOrganizationUnitAsyncResponse = (unknown);

export type PostOrganizationUnitsRemoveRoleFromOrganizationUnitAsyncError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsAddUserToOrganizationUnitData = {
    body?: AddUserToOrganizationUnitInput;
};

export type PostOrganizationUnitsAddUserToOrganizationUnitResponse = (unknown);

export type PostOrganizationUnitsAddUserToOrganizationUnitError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsRemoveUserFromOrganizationUnitData = {
    body?: RemoveUserToOrganizationUnitInput;
};

export type PostOrganizationUnitsRemoveUserFromOrganizationUnitResponse = (unknown);

export type PostOrganizationUnitsRemoveUserFromOrganizationUnitError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsGetUsersData = {
    body?: GetOrganizationUnitUserInput;
};

export type PostOrganizationUnitsGetUsersResponse = (GetOrganizationUnitUserOutputPagedResultDto);

export type PostOrganizationUnitsGetUsersError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsGetRolesData = {
    body?: GetOrganizationUnitRoleInput;
};

export type PostOrganizationUnitsGetRolesResponse = (GetOrganizationUnitRoleOutputPagedResultDto);

export type PostOrganizationUnitsGetRolesError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsGetUnAddUsersData = {
    body?: GetUnAddUserInput;
};

export type PostOrganizationUnitsGetUnAddUsersResponse = (GetUnAddUserOutputPagedResultDto);

export type PostOrganizationUnitsGetUnAddUsersError = (RemoteServiceErrorResponse);

export type PostOrganizationUnitsGetUnAddRolesData = {
    body?: GetUnAddRoleInput;
};

export type PostOrganizationUnitsGetUnAddRolesResponse = (GetUnAddRoleOutputPagedResultDto);

export type PostOrganizationUnitsGetUnAddRolesError = (RemoteServiceErrorResponse);

export type PostPermissionsTreeData = {
    body?: GetPermissionInput;
};

export type PostPermissionsTreeResponse = (PermissionOutput);

export type PostPermissionsTreeError = (RemoteServiceErrorResponse);

export type PostPermissionsUpdateData = {
    body?: UpdateRolePermissionsInput;
};

export type PostPermissionsUpdateResponse = (unknown);

export type PostPermissionsUpdateError = (RemoteServiceErrorResponse);

export type PostProjectsAllResponse = (Array<ProjectDto>);

export type PostProjectsAllError = (RemoteServiceErrorResponse);

export type PostProjectsPageData = {
    body?: PageProjectInput;
};

export type PostProjectsPageResponse = (ProjectDtoPagedResultDto);

export type PostProjectsPageError = (RemoteServiceErrorResponse);

export type PostProjectsCreateData = {
    body?: CreateProjectInput;
};

export type PostProjectsCreateResponse = (unknown);

export type PostProjectsCreateError = (RemoteServiceErrorResponse);

export type PostProjectsUpdateData = {
    body?: UpdateProjectInput;
};

export type PostProjectsUpdateResponse = (unknown);

export type PostProjectsUpdateError = (RemoteServiceErrorResponse);

export type PostProjectsDeleteData = {
    body?: DeleteProjectInput;
};

export type PostProjectsDeleteResponse = (unknown);

export type PostProjectsDeleteError = (RemoteServiceErrorResponse);

export type PostRolesAllResponse = (IdentityRoleDtoListResultDto);

export type PostRolesAllError = (RemoteServiceErrorResponse);

export type PostRolesPageData = {
    body?: PagingRoleListInput;
};

export type PostRolesPageResponse = (IdentityRoleDtoPagedResultDto);

export type PostRolesPageError = (RemoteServiceErrorResponse);

export type PostRolesCreateData = {
    body?: IdentityRoleCreateDto;
};

export type PostRolesCreateResponse = (IdentityRoleDto);

export type PostRolesCreateError = (RemoteServiceErrorResponse);

export type PostRolesUpdateData = {
    body?: UpdateRoleInput;
};

export type PostRolesUpdateResponse = (IdentityRoleDto);

export type PostRolesUpdateError = (RemoteServiceErrorResponse);

export type PostRolesDeleteData = {
    body?: IdInput;
};

export type PostRolesDeleteResponse = (unknown);

export type PostRolesDeleteError = (RemoteServiceErrorResponse);

export type PostSettingsAllResponse = (Array<SettingOutput>);

export type PostSettingsAllError = (RemoteServiceErrorResponse);

export type PostSettingsUpdateData = {
    body?: UpdateSettingInput;
};

export type PostSettingsUpdateResponse = (unknown);

export type PostSettingsUpdateError = (RemoteServiceErrorResponse);

export type PostTemplatesAllResponse = (Array<TemplateDto>);

export type PostTemplatesAllError = (RemoteServiceErrorResponse);

export type PostTemplatesPageData = {
    body?: PageTemplateInput;
};

export type PostTemplatesPageResponse = (TemplateDtoPagedResultDto);

export type PostTemplatesPageError = (RemoteServiceErrorResponse);

export type PostTemplatesCreateData = {
    body?: CreateTemplateInput;
};

export type PostTemplatesCreateResponse = (unknown);

export type PostTemplatesCreateError = (RemoteServiceErrorResponse);

export type PostTemplatesUpdateData = {
    body?: UpdateTemplateInput;
};

export type PostTemplatesUpdateResponse = (unknown);

export type PostTemplatesUpdateError = (RemoteServiceErrorResponse);

export type PostTemplatesDeleteData = {
    body?: DeleteTemplateInput;
};

export type PostTemplatesDeleteResponse = (unknown);

export type PostTemplatesDeleteError = (RemoteServiceErrorResponse);

export type PostTemplatesCreateDetailData = {
    body?: CreateTemplateDetailInput;
};

export type PostTemplatesCreateDetailResponse = (unknown);

export type PostTemplatesCreateDetailError = (RemoteServiceErrorResponse);

export type PostTemplatesUpdateDetailData = {
    body?: UpdateTemplateDetailInput;
};

export type PostTemplatesUpdateDetailResponse = (unknown);

export type PostTemplatesUpdateDetailError = (RemoteServiceErrorResponse);

export type PostTemplatesUpdateDetailContentData = {
    body?: UpdateTemplateDetailContentInput;
};

export type PostTemplatesUpdateDetailContentResponse = (unknown);

export type PostTemplatesUpdateDetailContentError = (RemoteServiceErrorResponse);

export type PostTemplatesDeleteDetailData = {
    body?: DeleteTemplateDetailInput;
};

export type PostTemplatesDeleteDetailResponse = (unknown);

export type PostTemplatesDeleteDetailError = (RemoteServiceErrorResponse);

export type PostTemplatesTreeData = {
    body?: GetTemplteTreeInput;
};

export type PostTemplatesTreeResponse = (Array<GetTemplateTreeOutput>);

export type PostTemplatesTreeError = (RemoteServiceErrorResponse);

export type PostTemplatesListResponse = (Array<TemplateDto>);

export type PostTemplatesListError = (RemoteServiceErrorResponse);

export type PostTemplatesControlTypeResponse = (Array<StringInt32KeyValuePair>);

export type PostTemplatesControlTypeError = (RemoteServiceErrorResponse);

export type PostTemplatesTemplateTypeResponse = (Array<StringInt32KeyValuePair>);

export type PostTemplatesTemplateTypeError = (RemoteServiceErrorResponse);

export type PostTemplatesCopyData = {
    body?: CopyTemplateInput;
};

export type PostTemplatesCopyResponse = (unknown);

export type PostTemplatesCopyError = (RemoteServiceErrorResponse);

export type PostTenantsFindData = {
    body?: FindTenantByNameInput;
};

export type PostTenantsFindResponse = (FindTenantResultDto);

export type PostTenantsFindError = (RemoteServiceErrorResponse);

export type PostTenantsPageData = {
    body?: PagingTenantInput;
};

export type PostTenantsPageResponse = (TenantDtoPagedResultDto);

export type PostTenantsPageError = (RemoteServiceErrorResponse);

export type PostTenantsCreateData = {
    body?: TenantCreateDto;
};

export type PostTenantsCreateResponse = (TenantDto);

export type PostTenantsCreateError = (RemoteServiceErrorResponse);

export type PostTenantsUpdateData = {
    body?: UpdateTenantInput;
};

export type PostTenantsUpdateResponse = (TenantDto);

export type PostTenantsUpdateError = (RemoteServiceErrorResponse);

export type PostTenantsDeleteData = {
    body?: IdInput;
};

export type PostTenantsDeleteResponse = (unknown);

export type PostTenantsDeleteError = (RemoteServiceErrorResponse);

export type PostTenantsPageConnectionStringData = {
    body?: PageTenantConnectionStringInput;
};

export type PostTenantsPageConnectionStringResponse = (PageTenantConnectionStringOutputPagedResultDto);

export type PostTenantsPageConnectionStringError = (RemoteServiceErrorResponse);

export type PostTenantsAddOrUpdateConnectionStringData = {
    body?: AddOrUpdateConnectionStringInput;
};

export type PostTenantsAddOrUpdateConnectionStringResponse = (unknown);

export type PostTenantsAddOrUpdateConnectionStringError = (RemoteServiceErrorResponse);

export type PostTenantsDeleteConnectionStringData = {
    body?: DeleteConnectionStringInput;
};

export type PostTenantsDeleteConnectionStringResponse = (unknown);

export type PostTenantsDeleteConnectionStringError = (RemoteServiceErrorResponse);

export type PostTextTemplatesPageData = {
    body?: PageTextTemplateInput;
};

export type PostTextTemplatesPageResponse = (PageTextTemplateOutputPagedResultDto);

export type PostTextTemplatesPageError = (RemoteServiceErrorResponse);

export type PostTextTemplatesCreateData = {
    body?: CreateTextTemplateInput;
};

export type PostTextTemplatesCreateResponse = (unknown);

export type PostTextTemplatesCreateError = (RemoteServiceErrorResponse);

export type PostTextTemplatesUpdateData = {
    body?: UpdateTextTemplateInput;
};

export type PostTextTemplatesUpdateResponse = (unknown);

export type PostTextTemplatesUpdateError = (RemoteServiceErrorResponse);

export type PostTextTemplatesDeleteData = {
    body?: DeleteTextTemplateInput;
};

export type PostTextTemplatesDeleteResponse = (unknown);

export type PostTextTemplatesDeleteError = (RemoteServiceErrorResponse);

export type PostTextTemplatesExportData = {
    body?: PageTextTemplateInput;
};

export type PostTextTemplatesExportResponse = ((Blob | File));

export type PostTextTemplatesExportError = (RemoteServiceErrorResponse);

export type PostUsersPageData = {
    body?: PagingUserListInput;
};

export type PostUsersPageResponse = (PageIdentityUserOutputPagedResultDto);

export type PostUsersPageError = (RemoteServiceErrorResponse);

export type PostUsersListData = {
    body?: PagingUserListInput;
};

export type PostUsersListResponse = (Array<IdentityUserDto>);

export type PostUsersListError = (RemoteServiceErrorResponse);

export type PostUsersExportData = {
    body?: PagingUserListInput;
};

export type PostUsersExportResponse = ((Blob | File));

export type PostUsersExportError = (RemoteServiceErrorResponse);

export type PostUsersCreateData = {
    body?: IdentityUserCreateDto;
};

export type PostUsersCreateResponse = (IdentityUserDto);

export type PostUsersCreateError = (RemoteServiceErrorResponse);

export type PostUsersUpdateData = {
    body?: UpdateUserInput;
};

export type PostUsersUpdateResponse = (IdentityUserDto);

export type PostUsersUpdateError = (RemoteServiceErrorResponse);

export type PostUsersDeleteData = {
    body?: IdInput;
};

export type PostUsersDeleteResponse = (unknown);

export type PostUsersDeleteError = (RemoteServiceErrorResponse);

export type PostUsersRoleData = {
    body?: IdInput;
};

export type PostUsersRoleResponse = (IdentityRoleDtoListResultDto);

export type PostUsersRoleError = (RemoteServiceErrorResponse);

export type PostUsersChangePasswordData = {
    body?: ChangePasswordInput;
};

export type PostUsersChangePasswordResponse = (boolean);

export type PostUsersChangePasswordError = (RemoteServiceErrorResponse);

export type PostUsersLockData = {
    body?: LockUserInput;
};

export type PostUsersLockResponse = (unknown);

export type PostUsersLockError = (RemoteServiceErrorResponse);

export type PostUsersFindByUserNameData = {
    body?: FindByUserNameInput;
};

export type PostUsersFindByUserNameResponse = (IdentityUserDto);

export type PostUsersFindByUserNameError = (RemoteServiceErrorResponse);

export type PostUsersMyProfileResponse = (MyProfileOutput);

export type PostUsersMyProfileError = (RemoteServiceErrorResponse);

export type PostUsersCanUseTwoFactorResponse = (boolean);

export type PostUsersCanUseTwoFactorError = (RemoteServiceErrorResponse);

export type PostUsersGetQrCodeResponse = (GetQRCodeOutput);

export type PostUsersGetQrCodeError = (RemoteServiceErrorResponse);

export type PostUsersEnabledTwoFactorData = {
    body?: EnabledTwoFactorInput;
};

export type PostUsersEnabledTwoFactorResponse = (unknown);

export type PostUsersEnabledTwoFactorError = (RemoteServiceErrorResponse);

export type PostUsersDisabledTwoFactorData = {
    body?: DisabledTwoFactorInput;
};

export type PostUsersDisabledTwoFactorResponse = (unknown);

export type PostUsersDisabledTwoFactorError = (RemoteServiceErrorResponse);

export type PostUsersResetTwoFactorData = {
    body?: ResetTwoFactorInput;
};

export type PostUsersResetTwoFactorResponse = (unknown);

export type PostUsersResetTwoFactorError = (RemoteServiceErrorResponse);